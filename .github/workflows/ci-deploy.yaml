name: CI Deploy

on:
  push:
    branches: "main"

  pull_request:
    branches:
      - "main"
  workflow_dispatch:

concurrency:
  group: GitHubPages
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write
  deployments: write

jobs:
  build:
    name: Building
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build with VitePress
        run: npm run build

  test:
    name: Testing
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Run Tests
        run: npm test

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # - name: Test and coverage
      #   run: npm jest --coverage ./tests/coverage/lcov.info

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        with:
          scanMetadataReportFile: target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy to GitHub Pages
    env:
      ArtifactPath: site/.vitepress/dist
    environment:
      name: Production
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: $ArtifactPath

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
